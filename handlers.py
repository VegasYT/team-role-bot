# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import random
import time
import asyncio
from html import escape

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from aiogram import types
from aiogram.types import Message
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from database import get_team_members, SessionLocal
from models import Team, Member, Role, Command, RoleCommands, Topic, TopicCommands
from config import BOT_TOKEN, EMOJI_IDS
from utils import check_user_and_permissions


bot = Bot(token=BOT_TOKEN)


async def add_team_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã (/add_team). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/add_team'):
        db.close()
        return
    
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_team <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã>")
        db.close()
        return

    team_name = args[1]

    # –í–∞–ª–∏–¥–∞—Ü–∏—è: –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    if ' ' in team_name:
        await message.reply("–û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞.")
        db.close()
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–º–∞–Ω–¥–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
    existing_team = db.query(Team).filter(Team.team_name == team_name).first()

    if existing_team:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        db.close()
        return

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    new_team = Team(team_name=team_name)
    db.add(new_team)
    db.commit()

    db.close()

    await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")


async def add_member_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–º–∞–Ω–¥—É (/add_member). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ —Å–æ—Å—Ç–æ—è—Ç –≤ –¥—Ä—É–≥–æ–π.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/add_member'):
        db.close()
        return
    
    args = message.text.split(maxsplit=2)
    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_member <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è1> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è2> ...")
        db.close()
        return

    team_name = args[1]
    usernames = args[2].split()  # –†–∞–∑–±–∏–≤–∞–µ–º –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–ø–∏—Å–æ–∫

    team = db.query(Team).filter(Team.team_name == team_name).first()

    if not team:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        db.close()
        return

    # –°–ø–∏—Å–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    added_users = []
    already_existing_users = []
    moved_users = []

    for username in usernames:
        # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª @, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        username_without_at = username.lstrip('@')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        existing_user = db.query(Member).filter(Member.username == username_without_at).first()

        if existing_user:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
            if existing_user.team_id is None:
                # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∫–æ–º–∞–Ω–¥—É
                existing_user.team_id = team.id
                added_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @
            elif existing_user.team_id != team.id:
                # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –µ–≥–æ –≤ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
                old_team_name = db.query(Team).filter(Team.id == existing_user.team_id).first()
                if old_team_name:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Å —Ç–∞–∫–∏–º ID —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    moved_users.append(f"@{username_without_at} –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã '{old_team_name.team_name}' –≤ –∫–æ–º–∞–Ω–¥—É '{team_name}'")
                existing_user.team_id = team.id  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
            else:
                already_existing_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
            new_user = Member(username=username_without_at, team_id=team.id)
            
            # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            default_role = db.query(Role).filter(Role.role_name == 'default_user').first()
            if not default_role:
                # –ï—Å–ª–∏ —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –µ–µ
                default_role = Role(role_name='default_user')
                db.add(default_role)
                db.commit()

            new_user.role_id = default_role.id  # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            db.add(new_user)
            added_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @

    db.commit()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    response_message = ""

    if added_users:
        response_message += f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(added_users)} –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–æ–º–∞–Ω–¥—É '{team_name}'.\n\n"

    if moved_users:
        response_message += f"üîÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(moved_users)}.\n\n"

    if already_existing_users:
        response_message += f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(already_existing_users)} —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ '{team_name}'."

    if not added_users and not already_existing_users and not moved_users:
        response_message = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–º–∞–Ω–¥—É '{team_name}'."

    db.close()

    await message.reply(response_message)


async def remove_team_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã (/remove_team). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –∑–∞—Ç–µ–º —É–¥–∞–ª—è–µ—Ç –µ—ë –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–¥–∞–ª—è–µ–º–æ–π –∫–æ–º–∞–Ω–¥—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/remove_team'):
        db.close()
        return
    
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove_team <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã>")
        return

    team_name = args[1]
    team = db.query(Team).filter(Team.team_name == team_name).first()

    if team:
        db.delete(team)
        db.commit()
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
    else:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


    db.close()


async def remove_member_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–º–∞–Ω–¥—ã (/remove_member). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –Ω–µ–π, –∑–∞—Ç–µ–º —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–º–∞–Ω–¥—ã.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/remove_member'):
        db.close()
        return
    
    args = message.text.split(maxsplit=2)
    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove_member <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è1> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è2> ...")
        return

    team_name = args[1]
    usernames = args[2].split()  # –†–∞–∑–±–∏–≤–∞–µ–º –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–ø–∏—Å–æ–∫

    team = db.query(Team).filter(Team.team_name == team_name).first()

    if not team:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    removed_users = []
    not_found_users = []

    for username in usernames:
        # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª @, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        username_without_at = username.lstrip('@')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ
        user_in_team = db.query(Member).filter(Member.team_id == team.id, Member.username == username_without_at).first()

        if user_in_team:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NULL –≤ –ø–æ–ª–µ team_id, —É–¥–∞–ª—è—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–º–∞–Ω–¥—ã
            user_in_team.team_id = None
            removed_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @
        else:
            not_found_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @

    db.commit()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response_message = ""

    if removed_users:
        response_message += f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(removed_users)} —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã '{team_name}'.\n\n"

    if not_found_users:
        response_message += f"üîé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(not_found_users)} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–º–∞–Ω–¥–µ '{team_name}'."

    if not removed_users and not not_found_users:
        response_message = f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–º–∞–Ω–¥—ã '{team_name}'."  # –ü–∏—à–µ–º, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    db.close()

    await message.reply(response_message)


async def tag_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–≥–∞ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (/tag). –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–≥–∞.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ç–µ–≥–æ–º, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/tag'):
        db.close()
        return
    
    team_name = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é team_name –∑–∞—Ä–∞–Ω–µ–µ
    custom_message = ""  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π custom_message
    mention_sender = True  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —É–ø–æ–º–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if message.text:
        # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ —Ç–µ–∫—Å—Ç
        args = message.text.split(maxsplit=3)  # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ 4 —á–∞—Å—Ç–∏: –∫–æ–º–∞–Ω–¥–∞, –∞—Ä–≥—É–º–µ–Ω—Ç, —Ç–µ–∫—Å—Ç
        if len(args) < 3:
            await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /tag <–∫–æ–º–∞–Ω–¥–∞> [-no-author] <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>")
            return

        team_name = args[1]
        custom_message = message.html_text.partition(team_name)[2].strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç --no-author
        if len(args) > 3 and args[2] == "-no-author":
            mention_sender = False
            custom_message = custom_message.replace("-no-author", "").strip()

    elif message.caption:  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
        args = message.caption.split(maxsplit=3)
        if len(args) < 3:
            await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /tag <–∫–æ–º–∞–Ω–¥–∞> [-no-author] <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>")
            return

        team_name = args[1]
        custom_message = message.caption.partition(team_name)[2].strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç --no-author
        if len(args) > 3 and args[2] == "-no-author":
            mention_sender = False
            custom_message = custom_message.replace("-no-author", "").strip()

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    if not team_name:
        await message.reply("–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ–≥–∞!")
        return

    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é SQLAlchemy
    members = get_team_members(db, team_name)

    if not members:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
        return

    mentions = " ".join([f"@{member.username}" for member in members])
    sender = f"–ö–æ–º–∞–Ω–¥—É –≤—ã–∑–≤–∞–ª(–∞): @{message.from_user.username}" if message.from_user.username else "–ö–æ–º–∞–Ω–¥—É –≤—ã–∑–≤–∞–ª(–∞): –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username"

    # –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, —É–±–∏—Ä–∞–µ–º –µ–≥–æ –∏–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not mention_sender:
        sender = ""

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
    team_name = escape(team_name)
    mentions = escape(mentions)
    sender = escape(sender)

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    formatted_message = (
        f"<blockquote>–î–ª—è –∫–æ–º–∞–Ω–¥—ã #{team_name}</blockquote>\n\n"
        f"{custom_message}\n\n"
        f"<i>{mentions}</i>\n"
        f"<i>{sender}</i>"
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç, –∞—É–¥–∏–æ)
    if message.photo:
        media = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except TelegramBadRequest as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        await bot.send_photo(
            chat_id=message.chat.id,
            photo=media,
            caption=formatted_message,
            parse_mode="HTML",
            caption_entities=message.caption_entities,
            message_thread_id=message.message_thread_id
        )

    elif message.document:
        media = message.document.file_id

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except TelegramBadRequest as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        await bot.send_document(
            chat_id=message.chat.id,
            document=media,
            caption=formatted_message,
            parse_mode="HTML",
            message_thread_id=message.message_thread_id
        )

    elif message.audio:
        mime_type = message.audio.mime_type
        if mime_type in ['audio/mpeg', 'audio/ogg']:
            media = message.audio.file_id
            try:
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except TelegramBadRequest as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            await bot.send_audio(
                chat_id=message.chat.id,
                audio=media,
                caption=formatted_message,
                parse_mode="HTML",
                message_thread_id=message.message_thread_id
            )
        else:
            media = message.audio.file_id
            try:
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except TelegramBadRequest as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            await bot.send_document(
                chat_id=message.chat.id,
                document=media,
                caption=formatted_message,
                parse_mode="HTML",
                message_thread_id=message.message_thread_id
            )

    else:
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except TelegramBadRequest as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        await bot.send_message(
            chat_id=message.chat.id,
            text=formatted_message,
            parse_mode="HTML",
            message_thread_id=message.message_thread_id
        )

    db.close()


async def ban_member_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (/ban_member). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ "banned", –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç –æ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±–∞–Ω–∞.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/ban'):
        db.close()
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    member = db.query(Member).filter(Member.username == message.from_user.username).first()

    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ban_member <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è1> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è2> ...")
        db.close()
        return

    usernames = args[1].split()  # –†–∞–∑–±–∏–≤–∞–µ–º –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–ø–∏—Å–æ–∫

    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å "banned"
    banned_role = db.query(Role).filter(Role.role_name == "banned").first()

    if not banned_role:
        await message.reply("–†–æ–ª—å 'banned' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —ç—Ç—É —Ä–æ–ª—å.")
        db.close()
        return

    banned_users = []
    not_found_users = []
    insufficient_level_users = []

    for username in usernames:
        # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª @, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        username_without_at = username.lstrip('@')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        user = db.query(Member).filter(Member.username == username_without_at).first()

        if user:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å
            if not user.role:
                insufficient_level_users.append(f"@{username_without_at} (—Ä–æ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")  # –†–æ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
                continue

            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏
            if member.role.level < user.role.level:
                insufficient_level_users.append(f"@{username_without_at}")  # –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω
            else:
                # –ú–µ–Ω—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "banned"
                user.role_id = banned_role.id  # –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –Ω–∞ banned
                banned_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @
        else:
            not_found_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @

    db.commit()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response_message = ""

    if banned_users:
        response_message += f"ü™ì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(banned_users)} –∑–∞–±–∞–Ω–µ–Ω—ã.\n\n"

    if insufficient_level_users:
        response_message += f"üõ°Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(insufficient_level_users)} –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω—ã –∏–∑-–∑–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è.\n\n"

    if not_found_users:
        response_message += f"üîé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(not_found_users)} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."

    if not banned_users and not not_found_users and not insufficient_level_users:
        response_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."  # –ü–∏—à–µ–º, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    db.close()

    await message.reply(response_message)


async def assign_role_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (/assign_role). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–æ–ª—å –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–ª—å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É, —Ä–æ–ª—å –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/assign_role'):
        db.close()
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    member = db.query(Member).filter(Member.username == message.from_user.username).first()

    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = message.text.split(maxsplit=2)
    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /assign_role <—Ä–æ–ª—å> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è1> <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è2> ...")
        db.close()
        return

    role_name = args[1]  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
    usernames = args[2].split()  # –ò–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å
    target_role = db.query(Role).filter(Role.role_name == role_name).first()

    if not target_role:
        await message.reply(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        db.close()
        return

    # –°–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –∏ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    successfully_assigned = []
    insufficient_level = []
    not_found_users = []

    for username in usernames:
        username_without_at = username.lstrip('@')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        target_user = db.query(Member).filter(Member.username == username_without_at).first()

        if target_user:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å
            if member.role.level >= target_role.level:
                # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                target_user.role_id = target_role.id
                successfully_assigned.append(f"@{username_without_at}")
            else:
                insufficient_level.append(f"@{username_without_at} (—É—Ä–æ–≤–µ–Ω—å —Ä–æ–ª–∏ —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è)")
        else:
            not_found_users.append(f"@{username_without_at}")  # –ü—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º @

    db.commit()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response_message = ""

    if successfully_assigned:
        response_message += f"‚úîÔ∏è –†–æ–ª–∏ {', '.join(successfully_assigned)} —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã.\n\n"

    if insufficient_level:
        response_message += f"‚ùå –†–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º {', '.join(insufficient_level)} –∏–∑-–∑–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏—Ö —Ä–æ–ª–∏.\n\n"

    if not_found_users:
        response_message += f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {', '.join(not_found_users)} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n"

    if not successfully_assigned and not insufficient_level and not not_found_users:
        response_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª–∏."  # –ü–∏—à–µ–º, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    db.close()

    await message.reply(response_message)


async def help_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (/help). –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–æ–ª–∏, —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/help'):
        db.close()
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    member = db.query(Member).filter(Member.telegram_id == message.from_user.id).first()

    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    role = member.role

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
    role_commands = db.query(Command).join(RoleCommands).filter(
        RoleCommands.role_id == role.id,
        Command.is_admin_command == False  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–ª—é is_admin_command
    ).all()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
    commands_list = ""
    for command in role_commands:
        command_message = ""

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–∞–Ω–¥–æ–π, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–¥–∞–Ω–æ
        if command.emoji:
            command_message += f"{command.emoji} "

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        command_message += f"<b>{command.command_name}</b>\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if command.description:
            command_message += f"‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {command.description}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if command.example:
            command_message += f"‚Ä¢ –ü—Ä–∏–º–µ—Ä: {command.example}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if command.parameters:
            command_message += f"‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {command.parameters}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ –∫–æ–º–∞–Ω–¥–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if command.note:
            command_message += f"‚Ä¢ –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {command.note}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
        commands_list += command_message + "\n"
    
    if not commands_list:
        commands_list = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏."

    help_message = f"""
<b>ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

{commands_list}
"""

    db.close()

    await message.reply(help_message, parse_mode="HTML")


async def help_admin_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help_admin, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π —Å –∏—Ö —É—Ä–æ–≤–Ω—è–º–∏.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ä–æ–ª–µ–π.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/help_admin'):
        db.close()
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏
    admin_commands = db.query(Command).filter(Command.is_admin_command == True).all()

    if not admin_commands:
        await message.reply("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")
        db.close()
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
    commands_list = ""
    for command in admin_commands:
        command_message = ""

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–∞–Ω–¥–æ–π, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–¥–∞–Ω–æ
        if command.emoji:
            command_message += f"{command.emoji} "

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        command_message += f"<b>{command.command_name}</b>\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if command.description:
            command_message += f"‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {command.description}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if command.example:
            command_message += f"‚Ä¢ –ü—Ä–∏–º–µ—Ä: {command.example}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if command.parameters:
            command_message += f"‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: \n{command.parameters}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ –∫–æ–º–∞–Ω–¥–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if command.note:
            command_message += f"‚Ä¢ –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {command.note}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
        commands_list += command_message + "\n"

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    roles = db.query(Role).all()
    roles_list = "\n".join([f"‚Ä¢ {role.role_name} (—É—Ä–æ–≤–µ–Ω—å {role.level})" for role in roles])

    help_message = f"""
<b>ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

{commands_list}
<b>üé≠ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏:</b>
{roles_list}
"""

    db.close()

    await message.reply(help_message, parse_mode="HTML")


async def teams_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /teams, –≤—ã–≤–æ–¥—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å –ø–µ—Ä–µ—á–Ω–µ–º –∫–æ–º–∞–Ω–¥ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
    """
    
    db = SessionLocal()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/teams'):
        db.close()
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    teams = db.query(Team).all()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–º–∞–Ω–¥–∞—Ö
    teams_list = ""
    for team in teams:
        # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã
        members = db.query(Member).filter(Member.team_id == team.id).all()
        member_names = [member.username for member in members]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã
        team_members = ", ".join(member_names) if member_names else "–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"

        teams_list += f"<b>–ö–æ–º–∞–Ω–¥–∞:</b> {team.team_name}\n"
        teams_list += f"<b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b> {team_members}\n\n"

    if not teams_list:
        teams_list = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."

    db.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.reply(f"<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b>\n\n{teams_list}", parse_mode="HTML")


async def edit_handler_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /edit_handler, –ø–æ–∑–≤–æ–ª—è—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ, —Ç–∞–∫—É—é –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–∏–µ, –ø—Ä–∏–º–µ—Ä, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –¥—Ä—É–≥–∏–µ —Å—Ç–æ–ª–±—Ü—ã.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.
    """
    
    db = SessionLocal()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = db.query(Member).filter(Member.telegram_id == message.from_user.id).first()

    if not user:
        await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        db.close()
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if not await check_user_and_permissions(db, message, '/edit_handler'):
        db.close()
        return

    args = message.text.split(maxsplit=3)

    if len(args) < 4:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /edit_handler <command_name> <column_name> <new_value>")
        db.close()
        return

    command_name = args[1]
    column_name = args[2]
    new_value = args[3]

    # –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–∞–Ω–¥—É –ø–æ –∏–º–µ–Ω–∏
    command = db.query(Command).filter(Command.command_name == command_name).first()

    if not command:
        await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        db.close()
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π —Å—Ç–æ–ª–±–µ—Ü
    valid_columns = ["description", "example", "parameters", "note", "emoji"]

    if column_name not in valid_columns:
        await message.reply(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Å—Ç–æ–ª–±–µ—Ü. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {', '.join(valid_columns)}.")
        db.close()
        return

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Å—Ç–æ–ª–±—Ü–µ
    setattr(command, column_name, new_value)

    db.commit()

    db.close()

    await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.\n"
                         f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π {column_name}: {new_value}")


async def role_manage_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ (/role_manage), –ø–æ–∑–≤–æ–ª—è—è —Å–æ–∑–¥–∞–≤–∞—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–¥–∞–ª—è—Ç—å —Ä–æ–ª–∏ –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö —É—Ä–æ–≤–µ–Ω—å.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–æ–ª—å—é.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/role_manage'):
        db.close()
        return

    args = message.text.split(maxsplit=4)
    
    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /role_manage <create|edit|delete|edit_level> <role_name> [<new_value>]")
        db.close()
        return
    
    operation = args[1].lower()
    role_name = args[2]

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏
    if operation == "create":
        if len(args) < 4:
            await message.reply("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏ —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –∏ —É—Ä–æ–≤–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'create <role_name> <level>').")
            db.close()
            return

        level = int(args[3]) if args[3].isdigit() else 0  # –£—Ä–æ–≤–µ–Ω—å —Ä–æ–ª–∏, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
        existing_role = db.query(Role).filter(Role.role_name == role_name).first()
        if existing_role:
            await message.reply(f"–†–æ–ª—å '{role_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            db.close()
            return

        # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å
        new_role = Role(role_name=role_name, level=level)
        db.add(new_role)
        db.commit()

        db.close()
        await message.reply(f"–†–æ–ª—å '{role_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å —É—Ä–æ–≤–Ω–µ–º {level}.")

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–æ–ª–∏
    elif operation == "edit_name":
        if len(args) < 4:
            await message.reply("–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è —Ä–æ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'edit_name <old_role_name> <new_role_name>').")
            db.close()
            return
        
        new_role_name = args[3]

        # –ò—â–µ–º —Ä–æ–ª—å –ø–æ –∏–º–µ–Ω–∏
        role = db.query(Role).filter(Role.role_name == role_name).first()
        if not role:
            await message.reply(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            db.close()
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ä–æ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        existing_role = db.query(Role).filter(Role.role_name == new_role_name).first()
        if existing_role:
            await message.reply(f"–†–æ–ª—å —Å –∏–º–µ–Ω–µ–º '{new_role_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            db.close()
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è —Ä–æ–ª–∏
        role.role_name = new_role_name
        db.commit()
        db.close()

        await message.reply(f"–ò–º—è —Ä–æ–ª–∏ '{role_name}' —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ '{new_role_name}'.")


    # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏
    elif operation == "delete":
        # –ò—â–µ–º —Ä–æ–ª—å –ø–æ –∏–º–µ–Ω–∏
        role = db.query(Role).filter(Role.role_name == role_name).first()
        if not role:
            await message.reply(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            db.close()
            return

        # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å
        db.delete(role)
        db.commit()

        db.close()
        await message.reply(f"–†–æ–ª—å '{role_name}' –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.")

    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Ä–æ–ª–∏
    elif operation == "edit_level":
        if len(args) < 4:
            await message.reply("–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–æ–ª–∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'edit_level <role_name> <new_level>').")
            db.close()
            return

        new_level = int(args[3]) if args[3].isdigit() else 0

        # –ò—â–µ–º —Ä–æ–ª—å –ø–æ –∏–º–µ–Ω–∏
        role = db.query(Role).filter(Role.role_name == role_name).first()
        if not role:
            await message.reply(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            db.close()
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
        role.level = new_level
        db.commit()

        db.close()
        await message.reply(f"–£—Ä–æ–≤–µ–Ω—å —Ä–æ–ª–∏ '{role_name}' –æ–±–Ω–æ–≤–ª–µ–Ω. –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {new_level}.")
    
    else:
        await message.reply("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: create, edit, delete, edit_level.")
        db.close()


async def list_roles_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /list_roles, –≤—ã–≤–æ–¥—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –∏ –∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å –ø–µ—Ä–µ—á–Ω–µ–º —Ä–æ–ª–µ–π –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º–∏ –∫–æ–º–∞–Ω–¥.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É
    if not await check_user_and_permissions(db, message, '/list_roles'):
        db.close()
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    roles = db.query(Role).all()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–æ–ª–µ–π
    if roles:
        roles_list = "<b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:</b>\n\n"
        for role in roles:
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏
            commands = db.query(Command).join(RoleCommands).filter(RoleCommands.role_id == role.id).all()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è —Ä–æ–ª–∏
            commands_list = ", ".join([command.command_name for command in commands]) if commands else "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –≤ —Å–ø–∏—Å–æ–∫
            roles_list += f"<b>–†–æ–ª—å:</b> {role.role_name} - <b>–£—Ä–æ–≤–µ–Ω—å:</b> {role.level}\n"
            roles_list += f"<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b> {commands_list}\n\n"
    else:
        roles_list = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π."

    db.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.reply(roles_list, parse_mode="HTML")


async def role_commands_manage_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è —Ä–æ–ª–µ–π (/role_commands_manage), –ø–æ–∑–≤–æ–ª—è—è –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏.
    
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–æ–ª–∏.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/role_commands_manage'):
        db.close()
        return

    args = message.text.split(maxsplit=3)

    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /role_commands_manage <add_commands|remove_commands> <role_name> </command1> </command2> ...")
        db.close()
        return

    operation = args[1].lower()
    role_name = args[2]
    command_names = args[3].split()  # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—Ä–æ–±–µ–ª–∞–º

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å
    role = db.query(Role).filter(Role.role_name == role_name).first()
    if not role:
        await message.reply(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        db.close()
        return

    successful_operations = []
    failed_operations = []

    if operation == "add_commands":
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        for command_name in command_names:
            command = db.query(Command).filter(Command.command_name == command_name).first()
            if not command:
                failed_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ –∫–æ–º–∞–Ω–¥–∞
            existing_role_command = db.query(RoleCommands).filter(RoleCommands.role_id == role.id, RoleCommands.command_id == command.id).first()
            if existing_role_command:
                failed_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ä–æ–ª–∏ '{role_name}'.")
                continue

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∫ —Ä–æ–ª–∏
            new_role_command = RoleCommands(role_id=role.id, command_id=command.id)
            db.add(new_role_command)
            successful_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ —Ä–æ–ª–∏ '{role_name}'.")

    elif operation == "remove_commands":
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        for command_name in command_names:
            command = db.query(Command).filter(Command.command_name == command_name).first()
            if not command:
                failed_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∫ —Ä–æ–ª–∏
            role_command = db.query(RoleCommands).filter(RoleCommands.role_id == role.id, RoleCommands.command_id == command.id).first()
            if not role_command:
                failed_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Ä–æ–ª–∏ '{role_name}'.")
                continue

            # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —Ä–æ–ª–∏
            db.delete(role_command)
            successful_operations.append(f"–ö–æ–º–∞–Ω–¥–∞ '{command_name}' –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Ä–æ–ª–∏ '{role_name}'.")

    else:
        await message.reply("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: add_commands, remove_commands.")
        db.close()
        return

    db.commit()
    db.close()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    response_message = ""
    if successful_operations:
        response_message += "\n".join(successful_operations) + "\n\n"
    if failed_operations:
        response_message += "\n".join(failed_operations)
    if not successful_operations and not failed_operations:
        response_message = "–ù–µ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."

    await message.reply(response_message)


async def list_topics_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /list_topics, –≤—ã–≤–æ–¥—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–ø–∏–∫–æ–≤ —Å –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å –ø–µ—Ä–µ—á–Ω–µ–º —Ç–æ–ø–∏–∫–æ–≤ –∏ –∫–æ–º–∞–Ω–¥, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º–∏.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    if not await check_user_and_permissions(db, message, '/list_topics'):
        db.close()
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–ø–∏–∫–∏
    topics = db.query(Topic).all()

    if not topics:
        await message.reply("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–ø–∏–∫–æ–≤.")
        db.close()
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–∏–∫–∞–º–∏ –∏ –∏—Ö –∫–æ–º–∞–Ω–¥–∞–º–∏
    topics_message = "üìö –°–ø–∏—Å–æ–∫ —Ç–æ–ø–∏–∫–æ–≤:\n\n"
    for topic in topics:
        description = topic.description if topic.description else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–ø–∏–∫–∞
        commands_in_topic = db.query(Command).join(TopicCommands).filter(TopicCommands.topic_id == topic.id).all()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
        if commands_in_topic:
            commands_list = "\n".join([f"  - {command.command_name}" for command in commands_in_topic])
        else:
            commands_list = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."

        topics_message += f"üîπ <b>{topic.topic_name}</b>\n{description}\n–ö–æ–º–∞–Ω–¥—ã:\n{commands_list}\n\n"

    db.close()
    await message.reply(topics_message, parse_mode="HTML")



async def topics_manage_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–∏–∫–∞–º–∏. –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç, —É–≤–µ–¥–æ–º–ª—è—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–ø–∏–∫–æ–º.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/topics_manage'):
        db.close()
        return

    args = message.text.split(maxsplit=3)

    if len(args) < 3:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /topics_manage <add|edit|delete> <topic_name> [<description>]")
        db.close()
        return

    operation = args[1].lower()
    topic_name = args[2]

    if operation == "add":
        if len(args) < 4:
            await message.reply("–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–∏–∫–∞ —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'add <topic_name> <description>').")
            db.close()
            return

        description = args[3]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–æ–ø–∏–∫
        existing_topic = db.query(Topic).filter(Topic.topic_name == topic_name).first()
        if existing_topic:
            await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            db.close()
            return

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–ø–∏–∫
        new_topic = Topic(topic_name=topic_name, description=description)
        db.add(new_topic)
        db.commit()
        db.close()

        await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º: {description}.")

    elif operation == "edit":
        if len(args) < 4:
            await message.reply("–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'edit <topic_name> <new_description>').")
            db.close()
            return

        new_description = args[3]

        # –ò—â–µ–º —Ç–æ–ø–∏–∫ –ø–æ –∏–º–µ–Ω–∏
        topic = db.query(Topic).filter(Topic.topic_name == topic_name).first()
        if not topic:
            await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            db.close()
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞
        topic.description = new_description
        db.commit()
        db.close()

        await message.reply(f"–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ '{topic_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

    elif operation == "delete":
        # –ò—â–µ–º —Ç–æ–ø–∏–∫ –ø–æ –∏–º–µ–Ω–∏
        topic = db.query(Topic).filter(Topic.topic_name == topic_name).first()
        if not topic:
            await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            db.close()
            return

        # –£–¥–∞–ª—è–µ–º —Ç–æ–ø–∏–∫
        db.delete(topic)
        db.commit()
        db.close()

        await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' –±—ã–ª —É–¥–∞–ª–µ–Ω.")

    else:
        await message.reply("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: add, edit, delete.")
        db.close()
        return


async def topics_commands_manage_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ —Ç–æ–ø–∏–∫–∞—Ö. –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –∏–∑ —Ç–æ–ø–∏–∫–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç, —É–≤–µ–¥–æ–º–ª—è—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ —Ç–æ–ø–∏–∫–∞.
    """
    
    db = SessionLocal()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/topics_commands_manage'):
        db.close()
        return

    args = message.text.split()

    if len(args) < 3 or args[1].lower() not in ['add', 'remove']:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /topics_commands_manage <add|delete> <topic_name> <command_1> <command_2> ...")
        db.close()
        return

    operation = args[1].lower()
    topic_name = args[2]
    commands_to_manage = args[3:]

    # –ò—â–µ–º —Ç–æ–ø–∏–∫ –ø–æ –∏–º–µ–Ω–∏
    topic = db.query(Topic).filter(Topic.topic_name == topic_name).first()
    if not topic:
        await message.reply(f"–¢–æ–ø–∏–∫ '{topic_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        db.close()
        return

    result_message = f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ '{operation}' –¥–ª—è —Ç–æ–ø–∏–∫–∞ '{topic_name}':\n\n"

    if operation == 'add':
        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–ø–∏—Å–∫–∞
        for command_name in commands_to_manage:
            command = db.query(Command).filter(Command.command_name == command_name).first()
            if not command:
                result_message += f"‚ùå –ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n"
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –≤ —Ç–æ–ø–∏–∫–µ
            existing_topic_command = db.query(TopicCommands).filter(TopicCommands.topic_id == topic.id, TopicCommands.command_id == command.id).first()
            if existing_topic_command:
                result_message += f"üîπ –ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–æ–ø–∏–∫ '{topic_name}'.\n"
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ —Ç–æ–ø–∏–∫
                topic_command = TopicCommands(topic_id=topic.id, command_id=command.id)
                db.add(topic_command)
                db.commit()
                result_message += f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–æ–ø–∏–∫ '{topic_name}'.\n"

    elif operation == 'remove':
        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–ø–∏—Å–∫–∞
        for command_name in commands_to_manage:
            command = db.query(Command).filter(Command.command_name == command_name).first()
            if not command:
                result_message += f"‚ùå –ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n"
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ —Ç–æ–ø–∏–∫–µ
            topic_command = db.query(TopicCommands).filter(TopicCommands.topic_id == topic.id, TopicCommands.command_id == command.id).first()
            if topic_command:
                # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —Ç–æ–ø–∏–∫–∞
                db.delete(topic_command)
                db.commit()
                result_message += f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{command_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Ç–æ–ø–∏–∫–∞ '{topic_name}'.\n"
            else:
                result_message += f"üîπ –ö–æ–º–∞–Ω–¥–∞ '{command_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–æ–ø–∏–∫–µ '{topic_name}'.\n"

    db.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(result_message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random
async def random_number_command(message: types.Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤–º–µ—Å—Ç–µ —Å —Å–ª—É—á–∞–π–Ω—ã–º —ç–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–∫–µ—Ä–æ–º.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
    :return: –û—Ç–≤–µ—Ç –≤ —á–∞—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∏ —Å–ª—É—á–∞–π–Ω—ã–º —ç–º–æ–¥–∑–∏.
    """
    
    db = SessionLocal()

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è
    message_id = message.message_id
    current_time = time.time_ns()  # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–∞–Ω–æ—Å–µ–∫—É–Ω–¥–∞—Ö

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∏–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ–ª—å—à–µ–π —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏
    random.seed(message_id + current_time)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if not await check_user_and_permissions(db, message, '/random_number'):
        db.close()
        return

    # –†–∞–∑–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ
    args = message.text.split()

    # –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    if len(args) < 2 or not args[1].isdigit():
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /random_number <—á–∏—Å–ª–æ>")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ
    upper_limit = int(args[1])

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ upper_limit
    random_number = random.randint(1, upper_limit)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
    random_emoji_id = random.choice(EMOJI_IDS)
    await message.reply_sticker(random_emoji_id)

    # –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è "–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ" —ç—Ñ—Ñ–µ–∫—Ç–∞
    await asyncio.sleep(1)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞
    await message.reply(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç: {random_number}")